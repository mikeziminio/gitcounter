version: "3.8"

x-python-service:
    &python-service
    build:
        context: ./setup/python-service
        args:
            - PROJECT_PATH=$PROJECT_PATH
    restart: always
    tty: true
    volumes:
        - shared_venv:$PROJECT_PATH/.venv
        - ./src:$PROJECT_PATH/src
        - ./pyproject.toml:$PROJECT_PATH/pyproject.toml
        - ./.env:$PROJECT_PATH/.env
        - ./setup/python-service/alembic.ini:$PROJECT_PATH/setup/python-service/alembic.ini
        - ./setup/tools:$PROJECT_PATH/setup/tools
    working_dir: $PROJECT_PATH
    env_file: .env

services:

    env-up:
        <<: *python-service
        restart: no
        depends_on:
            - postgres
#            - rabbitmq
        command:
            - /bin/bash
            - -c
            - |
                source ./.venv/bin/activate &&
                poetry install --no-root
            # TODO: добавить alembic

    dashboard-uvicorn:
        <<: *python-service
        depends_on:
            - env-up
        hostname: $DASHBOARD_HOST
        ports:
            - "${DASHBOARD_PORT}:${DASHBOARD_CONTAINER_PORT}"
        command:
            - /bin/bash
            - -c
            - |
                source ./.venv/bin/activate &&
                source ./setup/tools/wait-for-command.sh uvicorn &&
                source ./setup/tools/wait-for-socket.sh "$POSTGRES_HOST" "$POSTGRES_PORT" &&
                cd src &&
                uvicorn main:app --port $DASHBOARD_CONTAINER_PORT

#    celery-beat:
#        << : *python-service
#        volumes:
#            - ./data/celery-beat:$PROJECT_PATH/data/celery-beat
#        depends_on:
#            - env-up
#            - celery-worker
#        command:
#            - /bin/bash
#            - -c
#            - |
#                source ./.venv/bin/activate &&
#                cd src &&
#                celery -A tasks beat --schedule $PROJECT_PATH/data/celery-beat/celerybeat-schedule.db
#
#    celery-worker:
#        << : *python-service
#        depends_on:
#            - env-up
#        command:
#            - /bin/bash
#            - -c
#            - |
#                source ./.venv/bin/activate &&
#                cd src &&
#                celery -A tasks worker

#    rabbitmq:
#        image: rabbitmq:3.12.9-alpine
#        restart: always
#        hostname: $RABBITMQ_HOST
#        ports:
#            - "${RABBITMQ_PORT}:${RABBITMQ_CONTAINER_PORT}"
#        volumes:
#            - ./setup/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
#        env_file: .env

    postgres:
        image: postgres:16.1-alpine3.18
        restart: always
        hostname: $POSTGRES_HOST
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}"
        volumes:
            - ./setup/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
            - ./setup/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        env_file: .env

volumes:
    shared_venv:

